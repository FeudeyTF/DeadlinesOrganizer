@use "../colors.scss";
@use 'sass:color';
@use "sass:math";

.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0);
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    opacity: 0;
    visibility: hidden;
    display: flex;
    z-index: 999;
    backdrop-filter: blur(0);

    &.active {
        visibility: visible;
        background-color: rgba(0, 0, 0, 0.5);
        opacity: 1;
        pointer-events: all;
        backdrop-filter: blur(2px);

        .modal-content {
            transform: translateY(0) scale(1);
            opacity: 1;
        }
    }

    .modal-content {
        background-color: white;
        padding: 1.5rem 2rem 2rem;
        width: 90%;
        max-width: 500px;
        border-radius: colors.$border-radius;
        position: relative;
        margin: 0;
        max-height: 90vh;
        overflow-y: auto;
        transform: translateY(100vh) scale(0.95);
        opacity: 0;
        transition: all 0.4s ease;
        z-index: 999;

        .title {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1.5rem;
            color: colors.$text;
            font-size: 1.5rem;
            font-weight: 500;
        }
    }

    .close {
        height: 32px;
        width: 32px;
        text-align: center;
        font-size: 1.5rem;
        padding: 10px;
    }
}

body.modal-open {
    overflow: hidden;
}

.modal-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;

        label {
            font-weight: 500;
            color: colors.$text;
        }

        input,
        select {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid colors.$grey;
            border-radius: colors.$border-radius;
            background-color: transparent;
            color: inherit;

            &::placeholder {
                color: transparent;
            }

            &:focus {
                border-color: colors.$primary;
                box-shadow: 0 0 0 2px color.adjust(colors.$primary, $alpha: -0.7);
            }

            &:hover:not(:focus) {
                border-color: colors.$light-grey;
            }
        }
    }
}